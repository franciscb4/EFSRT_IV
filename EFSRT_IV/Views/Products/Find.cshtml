@model EFSRT_IV.Models.Product

@{
    ViewData["Title"] = "Find";
}

<div class="d-flex justify-content-start align-items-center gap-3">
    <a asp-action="FindAllProducts" class="d-flex justify-content-center align-items-center">
        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="black" class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">
            <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0m3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5z" />
        </svg>
    </a>
    <h1>Producto encontrado</h1>
</div>
<hr />

<div>
    <dl class="row">
        <dt class = "col-sm-2">
            Nombre:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.name)
        </dd>

        <dt class = "col-sm-2">
            Precio:
        </dt>
        <dd class = "col-sm-10">
            S/@Html.DisplayFor(model => model.price)
        </dd>

        <dt class = "col-sm-2">
            Categoria
        </dt>
        <dd class = "col-sm-10">
            @ViewBag.categoria
        </dd>

        <dt class = "col-sm-2">
            Stock
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.stock)
        </dd>
    </dl>
    @if (!Model.state)
    {
        <p class="h5 text-secondary">
            Producto desabilitado actualmente.
        </p>
    }
</div>

<div class="d-flex justify-content-start align-items-center gap-3">
    <a asp-action="UpdateProduct" asp-route-id="@Model.id" class="btn btn-secondary">
        Editar
    </a>
    <a asp-action="ChangeStateProduct" asp-route-id="@Model.id" asp-route-state="@(!(Model.state))" class="btn btn-secondary">
        @(Model.state ? "Desabilitar" : "Habilitar")
    </a>
</div>


<div id="sideBar">
</div>
@section Scripts {
    <script>
        $("#sideBar").load("/Store/SideBar")
    </script>
}